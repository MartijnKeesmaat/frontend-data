{"version":3,"sources":["helpers.js","renderBarChart.js","renderDonutChart.js","index.js"],"names":["truncator","str","words","split","splice","join","wrap","text","width","each","word","d3","select","reverse","line","lineNumber","y","attr","dy","parseFloat","tspan","append","pop","push","node","getComputedTextLength","shadeColor","color","percent","R","parseInt","substring","G","B","toString","length","renderBarChart","categories","height","padding","svg","addGlobalSVGBarChart","xScale","addXScaleBarChart","addBarsToBarChart","addLabelsToBarChart","addXAxisToBarChart","addGridlinesToBarChart","scaleLinear","domain","max","d","value","range","selectAll","data","enter","i","name","call","xAxis","axisBottom","ticks","g","remove","x","scaleTime","makeXGridlines","tickSize","tickFormat","renderDonutChart","size","thickness","radius","Math","min","colorPalette","addColorPalette","addGlobalSvg","arc","addArc","rotateArc","pie","addPieRadius","path","createArcPaths","showCategoryText","resetDonutText","addFillToDonut","addArcHover","addDefaultText","materials","scaleOrdinal","innerRadius","outerRadius","sort","defaultText","el","on","style","_current","categoryCounter","nCategories","queryMainCategories","fetchDataFromQuery","querySrc","query","outsideScope","responseFn","fetch","encodeURIComponent","then","res","json","handleDataMaterialPerCategory","getCategoriesFromData","fetchMaterialPerCategoryEach","results","bindings","map","termmaster","category","categoryLabel","objCount","categoriesTermaster","forEach","queryCategories","handleFetchMaterialPerCategory","normalizeMaterialPerCategory","renderCharts","Number","materiaalLabel","choCount","dataForFP","slice"],"mappings":"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","file":"src.2921e5e6.js","sourceRoot":"../src","sourcesContent":["export function truncator(str, words) {\n  return str\n    .split(/[, ]/)\n    .splice(0, words)\n    .join(\" \");\n}\n\n// https://bl.ocks.org/guypursey/f47d8cd11a8ff24854305505dbbd8c07\nexport function wrap(text, width) {\n  text.each(function () {\n    let text = d3.select(this),\n      words = text.text().split(/\\s+/).reverse(),\n      word,\n      line = [],\n      lineNumber = 0,\n      lineHeight = 1.1, // ems\n      y = text.attr(\"y\"),\n      dy = parseFloat(text.attr(\"dy\")),\n      tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\")\n    while (word = words.pop()) {\n      line.push(word)\n      tspan.text(line.join(\" \"))\n      if (tspan.node().getComputedTextLength() > width) {\n        line.pop()\n        tspan.text(line.join(\" \"))\n        line = [word]\n        tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", `${++lineNumber * lineHeight + dy}em`).text(word)\n      }\n    }\n  })\n}\n\n// https://stackoverflow.com/a/13532993\nexport function shadeColor(color, percent) {\n  var R = parseInt(color.substring(1, 3), 16);\n  var G = parseInt(color.substring(3, 5), 16);\n  var B = parseInt(color.substring(5, 7), 16);\n\n  R = parseInt(R * (100 + percent) / 100);\n  G = parseInt(G * (100 + percent) / 100);\n  B = parseInt(B * (100 + percent) / 100);\n\n  R = (R < 255) ? R : 255;\n  G = (G < 255) ? G : 255;\n  B = (B < 255) ? B : 255;\n\n  var RR = ((R.toString(16).length == 1) ? \"0\" + R.toString(16) : R.toString(16));\n  var GG = ((G.toString(16).length == 1) ? \"0\" + G.toString(16) : G.toString(16));\n  var BB = ((B.toString(16).length == 1) ? \"0\" + B.toString(16) : B.toString(16));\n\n  return \"#\" + RR + GG + BB;\n}","import { wrap } from \"./helpers\";\n\nexport default function renderBarChart(categories, width, height) {\n  const padding = 50;\n  const svg = addGlobalSVGBarChart(width, height);\n  const xScale = addXScaleBarChart(width, padding, categories);\n  addBarsToBarChart(xScale, svg, categories);\n  addLabelsToBarChart(svg, categories);\n  addXAxisToBarChart(svg, height, padding, xScale);\n  addGridlinesToBarChart(svg, width, height)\n}\n\nconst addGlobalSVGBarChart = (width, height) => {\n  return d3\n    .select(\".bar-chart\")\n    .append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n}\n\nconst addXScaleBarChart = (width, padding, categories) => {\n  return d3\n    .scaleLinear()\n    .domain([0, d3.max(categories, d => d.value)])\n    .range([padding, width - padding]);\n}\n\nconst addBarsToBarChart = (xScale, svg, categories) => {\n  svg\n    .selectAll(\"rect\")\n    .data(categories)\n    .enter()\n    .append(\"rect\")\n    .attr(\"x\", (d, i) => 100)\n    .attr(\"y\", (d, i) => i * 50)\n    .attr(\"width\", d => xScale(d.value) - 50)\n    .attr(\"height\", 15)\n    .attr(\"class\", \"bar\")\n    .attr(\"rx\", 15 / 2) //height / 2\n}\n\nconst addLabelsToBarChart = (svg, categories) => {\n  svg\n    .selectAll(\"text\")\n    .data(categories)\n    .enter()\n    .append(\"text\")\n    .text(d => d.name)\n    .attr(\"x\", (d, i) => 0)\n    .attr(\"y\", (d, i) => (i * 50) + 10)\n    .attr(\"class\", \"label\")\n    .attr(\"dy\", 0)//set the dy here\n    .attr(\"text-anchor\", \"end\")\n    .attr(\"transform\", \"translate(90,\" + 0 + \")\")\n    .call(wrap, 100);\n}\n\nconst addXAxisToBarChart = (svg, height, padding, xScale, categories) => {\n  const xAxis = d3.axisBottom(xScale).ticks(3);\n  svg.append(\"g\")\n    .attr(\"transform\", \"translate(55,\" + (height - padding) + \")\")\n    .attr(\"color\", '#9AA1A9')\n    .call(xAxis)\n    .call(g => g.select(\".domain\").remove())\n}\n\nconst addGridlinesToBarChart = (svg, width, height) => {\n  const x = d3.scaleTime().range([0, width]);\n\n  svg.append(\"g\")\n    .attr(\"class\", \"grid\")\n    .attr(\"transform\", \"translate(100,\" + height + \")\")\n    .call(makeXGridlines(x)\n      .tickSize(-height)\n      .tickFormat(\"\")\n    )\n}\n\n// https://bl.ocks.org/d3noob/c506ac45617cf9ed39337f99f8511218\nconst makeXGridlines = x => d3.axisBottom(x).ticks(5)\n\n","import { truncator, shadeColor } from './helpers';\n\nexport default function renderDonutChart(categories, size, thickness) {\n\n  // Setup\n  const width = size, height = size;\n  const radius = Math.min(width, height) / 2;\n  const colorPalette = addColorPalette();\n\n  // Create donut\n  const svg = addGlobalSvg(width, height)\n  const arc = addArc(thickness, radius);\n  const g = rotateArc(svg, width, height);\n  const pie = addPieRadius();\n  let path = createArcPaths(g, pie, categories);\n\n  // Interactions\n  showCategoryText(path);\n  resetDonutText(path, categories);\n  path = addFillToDonut(path, arc, colorPalette);\n  addArcHover(path, colorPalette);\n  addDefaultText(categories);\n\n  // d3\n  //   .selectAll('text')\n  //   .data(categories[1].materials)\n  //   .enter()\n  //   .text(d => d)\n\n\n  const legend = d3\n    .select('.pie')\n    .append(\"g\")\n    .attr('class', 'legend');\n\n  legend\n    .selectAll(\"text\")\n    .data(categories[1].materials)\n    .enter()\n    .append(\"text\")\n    .text(d => d.name)\n    .attr(\"x\", (d, i) => 50)\n    .attr(\"y\", (d, i) => 50 * i)\n    .attr(\"class\", \"legend-label\")\n}\n\n\n// CREATE DONUT\nconst addColorPalette = () => {\n  const colorArr = ['#B83B5E', '#995A3A', '#F08A5D', '#F9D769', '#6A2C70'];\n  return d3.scaleOrdinal(colorArr);\n}\n\nconst addGlobalSvg = (width, height) => {\n  return d3.select(\".donut-chart\")\n    .append('svg')\n    .attr('class', 'pie')\n    .attr('width', width)\n    .attr('height', height);\n}\n\nconst addArc = (thickness, radius) => {\n  return d3.arc()\n    .innerRadius(radius - thickness)\n    .outerRadius(radius);\n}\n\nconst rotateArc = (svg, width, height) => {\n  return svg.append('g')\n    .attr('transform', 'translate(' + (width / 2) + ',' + (height / 2) + ')');\n}\n\nconst addPieRadius = () => {\n  // transform the value of each group to a radius that will be displayed on the chart.\n  return d3.pie()\n    .value(function (d) { return d.value; })\n    .sort(null);\n}\n\nconst createArcPaths = (g, pie, categories) => {\n  return g.selectAll('path')\n    .data(pie(categories[1].materials))\n    .enter()\n    .append(\"g\")\n}\n\nfunction addDefaultText(categories) {\n  const defaultText = d3\n    .select('.pie')\n    .append(\"g\")\n    .attr('class', 'default-text');\n\n  defaultText.append(\"text\")\n    .attr(\"class\", \"donut-title\")\n    .text(truncator(categories[1].name, 1))\n    .attr('text-anchor', 'middle')\n    .attr('dy', '50%')\n    .attr('dx', '50%')\n\n  defaultText.append(\"text\")\n    .attr(\"class\", \"donut-sub-title\")\n    .text('Categorie')\n    .attr('text-anchor', 'middle')\n    .attr('dy', '60%')\n    .attr('dx', '50%')\n}\n\n// INTERACTIONS\nconst showCategoryText = el => {\n  el.on(\"mouseover\", function (d) {\n    d3.select('.donut-title').text(truncator(d.data.name, 1));\n    d3.select('.donut-sub-title').text(d.data.value);\n  })\n}\n\nconst resetDonutText = (el, categories) => {\n  el.on(\"mouseout\", function () {\n    d3.select('.donut-title').text(truncator(categories[1].name, 1));\n    d3.select('.donut-sub-title').text('Categorie');\n  })\n}\n\nconst addFillToDonut = (path, arc, colorPalette) => {\n  return path.append('path')\n    .attr('d', arc)\n    .attr('fill', (d, i) => colorPalette(i))\n}\n\nconst addArcHover = (path, colorPalette) => {\n  path\n    .on(\"mouseover\", function (d) {\n      d3.select(this)\n        .style(\"cursor\", \"pointer\")\n        .style(\"fill\", shadeColor(colorPalette(this._current), -20));\n    })\n\n  path\n    .on(\"mouseout\", function (d) {\n      d3.select(this)\n        .style(\"cursor\", \"none\")\n        .style(\"fill\", colorPalette(this._current));\n    })\n    .each(function (d, i) { this._current = i; });\n}\n","import renderBarChart from './renderBarChart.js'\nimport renderDonutChart from './renderDonutChart.js'\n\nlet categoryCounter = 0;\nconst nCategories = 19;\nconst categories = [];\n\nconst queryMainCategories = `\n  #+ summary: Get titles meestvoorkomende catogrieen\n  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n  PREFIX dc: <http://purl.org/dc/elements/1.1/>\n  PREFIX dct: <http://purl.org/dc/terms/>\n  PREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n  PREFIX edm: <http://www.europeana.eu/schemas/edm/>\n  PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n  # tel aantallen per materiaal\n  SELECT ?categoryLabel ?category (COUNT(?allChos) AS ?objCount) WHERE {\n    ?cho edm:isRelatedTo <https://hdl.handle.net/20.500.11840/termmaster2802> .\n    <https://hdl.handle.net/20.500.11840/termmaster2802> skos:narrower ?category .\n    ?category skos:prefLabel ?categoryLabel .\n    ?category skos:narrower* ?allChos .\n  }\n    \n  GROUP BY ?categoryLabel ?category\n  ORDER BY DESC(?objCount)\n`;\n\nconst fetchDataFromQuery = (querySrc, query, outsideScope, responseFn) => {\n  fetch(`${querySrc}?query=${encodeURIComponent(query)}&format=json`)\n    .then(res => res.json())\n    .then(data => responseFn(data, outsideScope));\n};\n\nconst handleDataMaterialPerCategory = data => {\n  const categories = getCategoriesFromData(data);\n  fetchMaterialPerCategoryEach(categories);\n};\n\nfetchDataFromQuery(\n  \"https://api.data.netwerkdigitaalerfgoed.nl/datasets/ivo/NMVW/services/NMVW-20/sparql\",\n  queryMainCategories,\n  \"\",\n  handleDataMaterialPerCategory\n);\n\nconst getCategoriesFromData = data => {\n  return data.results.bindings.map(i => {\n    return {\n      termmaster: `<${i.category.value}>`,\n      name: i.categoryLabel.value,\n      value: i.objCount.value\n    };\n  });\n};\n\nconst fetchMaterialPerCategoryEach = categoriesTermaster => {\n  categoriesTermaster.forEach(category => {\n    const queryCategories = `\n        PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n        PREFIX dc: <http://purl.org/dc/elements/1.1/>\n        PREFIX dct: <http://purl.org/dc/terms/>\n        PREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n        PREFIX edm: <http://www.europeana.eu/schemas/edm/>\n        PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n        # tel aantallen per materiaal\n        SELECT ?subcategorie ?materiaalLabel (COUNT(?cho) AS ?choCount) WHERE {\n        # haal van een term in de thesaurus de subcategorieen op\n        ${category.termmaster} skos:narrower* ?subcategorie .\n        # haal de objecten van deze subcategorieen en het materiaal\n        ?cho edm:isRelatedTo ?subcategorie .\n        ?cho dct:medium ?materiaal .\n        # haal het Label op van materiaal\n        ?materiaal skos:prefLabel ?materiaalLabel .\n        }\n        GROUP BY ?subcategorie ?materiaalLabel\n        ORDER BY DESC(?choCount)\n        LIMIT 5\n      `;\n\n    fetchDataFromQuery(\n      \"https://api.data.netwerkdigitaalerfgoed.nl/datasets/ivo/NMVW/services/NMVW-20/sparql\",\n      queryCategories,\n      category,\n      handleFetchMaterialPerCategory\n    );\n  });\n};\n\nconst handleFetchMaterialPerCategory = (data, category) => {\n  categoryCounter++;\n  categories.push(normalizeMaterialPerCategory(data, category));\n  if (categoryCounter >= nCategories) renderCharts(categories);\n};\n\nconst normalizeMaterialPerCategory = (data, category) => {\n  return {\n    name: category.name,\n    value: Number(category.value),\n    materials: data.results.bindings.map(i => {\n      return {\n        name: i.materiaalLabel.value,\n        value: Number(i.choCount.value)\n      };\n    })\n  };\n};\n\nfunction renderCharts(categories) {\n  const dataForFP = categories.slice(0, 5);\n  renderBarChart(dataForFP, 600, 300);\n  renderDonutChart(categories, 260, 35);\n}\n\n\n\n\n\n"]}